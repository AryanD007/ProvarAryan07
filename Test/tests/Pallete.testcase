<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="19">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="1" title="Assert: Aryan EqualTo Aryan">
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">Aryan</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">Aryan</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Sorry, but no sorry</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="4" title="Assert: 1.0 EqualTo 1.00">
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">1.0</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">1.00</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">Try again</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.Fail" name="Fail" testItemId="5" title="Fail Test: Yo you failed">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="message">
          <value class="value" valueClass="string">Yo you failed</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="6" title="If: 5&gt;0">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="condition">
          <value class="value" valueClass="string">5&gt;0</value>
        </argument>
      </arguments>
      <clauses>
        <clause name="then" testItemId="7"/>
        <clause name="else" testItemId="8"/>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="14" title="Set Values: VAR">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">VAR</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">1 2 3 4 5</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.string.Split" name="Split" testItemId="15" title="Split: {VAR}=&gt; =&gt;Tokens">
      <arguments>
        <argument id="input">
          <value class="variable">
            <path element="VAR"/>
          </value>
        </argument>
        <argument id="separator">
          <value class="value" valueClass="string"> </value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">Tokens</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.Finally" name="Finally" testItemId="16" title="Finally: Yo this is finally">
      <arguments>
        <argument id="description">
          <value class="value" valueClass="string">Yo this is finally</value>
        </argument>
      </arguments>
      <clauses>
        <clause name="hidden" testItemId="17"/>
      </clauses>
    </apiCall>
  </steps>
</testCase>
